Triage engine
=============

* Detect hangs

* CReduced cases are now treated as if the llvm/clang versions don't
  affect them (the versions used are stored in the database, but
  nothing is done with them). Figure out the right way of using it.

* Do the triage runs in parallel

* Write code to tell apart creduce failure from failure in our
  property check script?

* More controlled report generation instead of the current
  update-hook.sh

* Check that llvm-symbolizer is on path, since that makes the outputs
  much more readable

  * Also, having llvm-symbolizer makes doing triage runs in parallel
    much more critical, as they now take time.

* On clang executions, somehow detect a totally botched execution
  (like the binary missing). Now it seems to be recorded as a success.


Database
========

* The 'failed' value for creduce_result is probably not needed anymore
  (unless renamed to 'creduce_failed', grep below for the idea)

Reducer
=======

* Maybe parallelize the dumb reductions?

* Perhaps split dumb reduce worker from creduce worker? S.t. the dumb
  reducer is run for cases where the result in DB is 'creduce_failed'
  or something.

* Sometimes CReduce leaves stray clang_delta processes
  running... figure out what can be done about that.

* Investigate why SIGTERMing (ctrl-c) creduce occasionally results in
  a failure to remove the creduce tmpdir, indirectly resulting in
  failure to remove the clang_triage tmpdir

* Do not outright remove outdated reduced cases; mark and show them in
  report as possibly outdated.

* Detect new creduce version when deciding to remove/outdate reduced
  cases.


Report
======

* Show failed reduces?

* Split report generation: First part queries the DB and outputs JSON,
  the other part reads the JSON and generates the report

* Figure out a better templating engine (for xhtml) than pystache

* Might make sense to sort creduced cases earlier in report?

Tools
=====

* Make import tool accept s/h/sha1 directory hierarchies like those
  generated by the export tools

* Also make import tool take input directory as param. Probably no
  need to have it in config.py since it's mosty a one-off operation.

Misc
====

* Also import cases other than those that once crashed, striving for
  maximum coverage?

* Also import those of the cases that afl designated as hangs that
  actually are hangs

* Some kind of test framework
